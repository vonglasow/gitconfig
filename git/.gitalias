[alias]
	addm = !git-ls-files -m -z | xargs -0 git-add && git status
	addu = !git-ls-files -o --exclude-standard -z | xargs -0 git-add && git status
	amend = commit --amend -S
	b = !git-branch -vv | cut -c1 --complement | awk '{print $1,$3}' | sed -e 's_:_]_g'
	ba = branch -a
	branches = branch -a
	changes = diff --name-status
	ci = commit -S
	co = checkout
	cp = cherry-pick -ex
	csfixer = !git-ls-files -m | xargs -l -I{} php-cs-fixer fix {} --dry-run --ansi --diff --verbose --config-file .php_cs
	dic = diff --cached --color-words=.
	diff = diff --color-words=.
	diffstat = diff --stat
	f = fetch --all -p
	fixcs = !git status --short | grep "^\\s*[MARC]" | awk '{print $2}' | xargs -rl php-cs-fixer fix --ansi --config-file .php_cs
	fixup = commit --fixup
	fm = !git f && git co $2 && git pull && git co $1 && git pull && git merge $2
	forget = "!git fetch -p && git branch -vv | awk '/: gone]/{print $1}' | xargs git branch -D"
	graph = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
	get-config-file = !git config --list --show-origin | awk '{print $1}' | sort -u
	graphstat = log --graph --all --decorate --stat --date=iso
	graphx = !GIT_PAGER='less -FRSX' git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(cyan)<%an>%Creset' --abbrev-commit --date=relative --all
	in = !git fetch && git log --pretty=oneline --abbrev-commit --graph ..@{u}
	info = remote -v
	lc = !git oneline ORIG_HEAD.. --stat --no-merges
	lin = log --pretty=oneline --abbrev-commit --graph ..@{u}
	lint  = !git st --porcelain | grep -e '^[AUM ][UM ].*\\.php$' | awk '{print $2}' | xargs -L 1 php -l
	list-alias = !git config --get-regexp alias | sort
	lout = log --pretty=oneline --abbrev-commit --graph @{u}..
	lv = log --name-status
	mate = !git-ls-files -m -z | xargs -0 vim
	mateall = !git-ls-files -m -o --exclude-standard -z | xargs -0 vim
	oldest-ancestor = !zsh -c 'diff --old-line-format='' --new-line-format='' <(git rev-list --first-parent "${1:-master}") <(git rev-list --first-parent "${2:-HEAD}") | head -1'
	oneline = log --pretty=oneline --abbrev-commit --graph
	out = !git fetch && git lout
	pa = submodule foreach git pull origin master
	pullify = config --add remote.origin.fetch '+refs/pull/*/head:refs/remotes/origin/pr/*'
	revival = !git checkout $(git rev-list -n 1 HEAD -- "$1")~1 -- "$1"
	rmm = !git ls-files -d -z | xargs -0 git-rm && git status
	rmorig = !find . -name *.orig -type f | xargs -rl echo rm -rf
	sa = "!sh -c 'git stash apply stash@{$1}' -"
	sd = !sh -c \"git stash drop stash@{$1}\" -
	search-file = !git log --all --full-history --name-only -- $1
	search-string = !sh -c \"git log --all --full-history --name-only -S $1\"
	serve = daemon --reuseaddr --verbose  --base-path=. --export-all ./.git
	sl = stash list
	slm = !echo $(git log --author=\"$(git config user.name)\" --no-merges --before=$(date \"+%Y-%m-01T00:00\") --after=$(date -d \"-$(date +%d) days -1 month\" \"+%Y-%m-%dT23:59\") --reverse | grep commit | wc -l) commits, $(git log --author=\"$(git config user.name)\" --no-merges --before=$(date \"+%Y-%m-01T00:00\") --after=$(date -d \"-$(date +%d) days -1 month\" \"+%Y-%m-%dT23:59\") --reverse --stat | grep -Eo \"[0-9]{1,} files? changed\" | grep -Eo \"[0-9]{1,}\" | awk \"{ sum += \\$1 } END { print sum }\") files changed, $(git log --author=\"$(git config user.name)\" --no-merges --before=$(date \"+%Y-%m-01T00:00\") --after=$(date -d \"-$(date +%d) days -1 month\" \"+%Y-%m-%dT23:59\") --reverse --stat | grep -Eo \"[0-9]{1,} insertions?\" | grep -Eo \"[0-9]{1,}\" | awk \"{ sum += \\$1 } END { print sum }\") insertions and $(git log --author=\"$(git config user.name)\" --no-merges --before=$(date \"+%Y-%m-01T00:00\") --after=$(date -d \"-$(date +%d) days -1 month\" \"+%Y-%m-%dT23:59\") --reverse --stat | grep -Eo \"[0-9]{1,} deletions?\" | grep -Eo \"[0-9]{1,}\" | awk \"{ sum += \\$1 } END { print sum }\") deletions last month
	sp = stash pop
	ss = stash save
	st = status
	sw = "!sh -c 'git stash show -p stash@{$1}' -"
	tags = tag
	undo = reset --soft HEAD^
	unstage = !git reset HEAD
	unstash = stash pop
	who = shortlog -sne
